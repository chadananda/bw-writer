"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMinimalSerdeContext = exports.fromUtf8 = exports.toUtf8 = void 0;
const eventstream_serde_node_1 = require("@smithy/eventstream-serde-node");
const util_base64_1 = require("@smithy/util-base64");
const fetch_http_handler_1 = require("@smithy/fetch-http-handler");
const toUtf8 = (input) => new TextDecoder('utf-8').decode(input);
exports.toUtf8 = toUtf8;
const fromUtf8 = (input) => new TextEncoder().encode(input);
exports.fromUtf8 = fromUtf8;
// `de_ResponseStream` parses a Bedrock response stream and emits events as they are found.
// It requires a "context" argument which has many fields, but for what we're using it for
// it only needs this.
const getMinimalSerdeContext = () => {
    const marshaller = new eventstream_serde_node_1.EventStreamMarshaller({ utf8Encoder: exports.toUtf8, utf8Decoder: exports.fromUtf8 });
    return {
        base64Decoder: util_base64_1.fromBase64,
        base64Encoder: util_base64_1.toBase64,
        utf8Decoder: exports.fromUtf8,
        utf8Encoder: exports.toUtf8,
        eventStreamMarshaller: marshaller,
        streamCollector: fetch_http_handler_1.streamCollector,
    };
};
exports.getMinimalSerdeContext = getMinimalSerdeContext;
//# sourceMappingURL=streaming.js.map