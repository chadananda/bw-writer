import { ApiKeyValues, ChatMessage, EmbeddingModel, EmbeddingResult, LLMSettings, ModelProvider } from './models/types';
import { StreamingTextResponse } from 'ai';
export declare class Client {
    private client;
    private provider;
    private apiKeyValues;
    constructor(provider: ModelProvider, apiKeyValues: ApiKeyValues);
    private initialize;
    private checkClient;
    createChatCompletion(chatSettings: LLMSettings, messages: ChatMessage[]): Promise<StreamingTextResponse>;
    createChatCompletionNonStreaming(chatSettings: LLMSettings, messages: ChatMessage[]): Promise<string>;
    parseRequest(request: Request): Promise<{
        chatSettings: LLMSettings;
        messages: ChatMessage[];
    }>;
    private handleError;
    generateEmbeddings(model: EmbeddingModel, texts: string[], truncation?: boolean, dimensions?: number, inputType?: 'query' | 'document'): Promise<EmbeddingResult>;
}
