"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpenAIEmbeddingModels = void 0;
const types_1 = require("../models/types");
const OPENAI_PLATORM_LINK = 'https://platform.openai.com/docs/overview';
const TEXT_EMBEDDING_ADA_002 = {
    modelId: 'text-embedding-ada-002',
    modelName: 'Text Embedding ADA v002',
    provider: types_1.ModelProvider.OpenAI,
    platformLink: OPENAI_PLATORM_LINK,
    dimensions: 3072,
    maxInputs: 2048,
    truncationAvailable: false,
    maxContextLength: 8191,
    encodingFormats: ['float', 'base64'],
};
const TEXT_EMBEDDING_3_LARGE = {
    modelId: 'text-embedding-3-large',
    modelName: 'Text Embedding 3 Large',
    provider: types_1.ModelProvider.OpenAI,
    platformLink: OPENAI_PLATORM_LINK,
    dimensions: [256, 1024, 3072],
    maxInputs: 2048,
    truncationAvailable: false,
    maxContextLength: 8191,
    encodingFormats: ['float', 'base64'],
};
const TEXT_EMBEDDING_3_SMALL = {
    modelId: 'text-embedding-3-small',
    modelName: 'Text Embedding 3 Small',
    provider: types_1.ModelProvider.OpenAI,
    platformLink: OPENAI_PLATORM_LINK,
    dimensions: [512, 1536],
    maxInputs: 2048,
    truncationAvailable: false,
    maxContextLength: 8191,
    encodingFormats: ['float', 'base64'],
};
exports.OpenAIEmbeddingModels = {
    TEXT_EMBEDDING_ADA_002,
    TEXT_EMBEDDING_3_LARGE,
    TEXT_EMBEDDING_3_SMALL,
};
