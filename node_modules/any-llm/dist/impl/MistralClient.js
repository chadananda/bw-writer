"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MistralClient = void 0;
const Base_1 = require("../models/Base");
const types_1 = require("../models/types");
const ServerChatHelpers_1 = require("../util/ServerChatHelpers");
const OpenAIChat_1 = require("./chat/OpenAIChat");
class MistralClient extends Base_1.ClientBase {
    initialize(apiKeyValues) {
        return __awaiter(this, void 0, void 0, function* () {
            const mistralApiKey = (0, ServerChatHelpers_1.checkAndGetEnv)(apiKeyValues, types_1.validEnviromentKeys.MISTRAL_API_KEY);
            this.chatClient = new OpenAIChat_1.OpenAIChat(mistralApiKey, 'https://api.mistral.ai/v1');
        });
    }
}
exports.MistralClient = MistralClient;
